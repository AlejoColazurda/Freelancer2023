:root{
/*PLAETA DE COLORES (LA LETRA 'C' ES PARA INDICAR QUE SON COLORES)*/
    --cblanco: #FFFFFF;
    --cnegro:#212121;
    --cprimario:#FFC107;
    --csecundario: #0097A7;
    --cgris:#757575;
    --cgrisclaro:#DFE9F3;
}

/*GLOBALES*/
html{
    font-size: 62.5%;
    box-sizing: border-box;
    scroll-snap-type: y mandatory;
}

/*SCROLL-SNAP*/
.servicios,
.navegacion-principal,
.formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}

*, *::before, *::after{
    box-sizing: border-box;
}
body{
    font-size: 16px;/* 1rem = 10px*/
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, var(--cgrisclaro)  0%, var(--cblanco) 100%);
}
.contenedor{
    /*Cambios: Pasamos de usar solo width a max-width, ya que queremos que cualquier div tome por default el 100%*/
    max-width: 120rem;
    /*EN MARGIN, EL PRIMER VALOR ES IGUAL A (margin-top), EL SEGUNDO ES IGUAL A (margin-right), EL TERCERO ES IGUAL A (margin-bottom) Y POR ULTIMO (margin-left). usar margin solo nos brinda poder ahorrar lineas de codigo.*/
    margin: 0 auto; 
    /*CUANDO TENEMOS VALORES REPETIDOS COMO EN EL CASO DE ARRIBA, CSS INTERPRETA QUE DEBE DE REPETIR ESOS VALORES, Y CON SOLO PONER DOS DE ESOS EL RESTO LO REPLICA.(siemrpe hablando de el codigo de arriba)*/
}
.boton{
    background-color: var(--csecundario);
    color: var(--cblanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none;
}
@media (min-width: 480px) {
    .boton {
        width: auto;
    }
}
.boton:hover{
    cursor: pointer;
}

.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
-moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
background-color: var(--cblanco);
border-radius: 1rem;
}

/*TIPOGRAFIA.*/
h1{
    font-size: 3.8rem;
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size: 1.8rem;
}
h1,h2,h3{
/*h1*//*Si colocamos un h1 antes de este span, nos dara para cada span que se encuentre dentro de cada etiqueta h1 los estilos que le definamos.*/
    text-align: center;
}

/*TITULOS*/
.titulo span{
    font-size: 2rem;
}

/*UTILIDADES*/
.w-sm-100{
    width: 100%;
}
@media (min-width: 768px) {
    .w-sm-100{
        width: auto;
    }
}
.flex{
    display: flex;
}
.alinear-derecha{
    justify-content: flex-end;
}

/*NAVEGACION PRINCIPAL*/
.nav-bg{
    background-color: var(--csecundario);
}
.navegacion-principal{
/*con display flex tenemos nuevas opciones, y usando justify content hacemos que los links de la navegacion queden con un espacio entre cada uno de los links, a diferencia de space around que nos da espacios en mabas direcciones.*/
    display: flex;
    flex-direction: column;
    
/*---------------------------------------------------------*/
}
.navegacion-principal a{
/*cambiamos el color de los items en navegacion y le sacamos toda la decoracion que contenian.*/
    color: var(--cblanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    /*---------------------------------------------------------------*/
    /*un padding de 10px*/
    padding: 1rem;
    /*------------------*/
}
.navegacion-principal a:hover{
    background-color: var(--cprimario);
    color: var(--cnegro);
}
@media(min-width:768px){
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between;
    }
}

/*HERO*/
.hero{
    background-image: url(../img/hero.jpg) ;
    background-repeat: no-repeat;
    background-size: cover;
    height: 410px;
    /*Agregamos "position: relative; para que el contenido hijo pueda tener posicion absoluta. Con esto, podemos ubicar con coordenadas todo lo del contenido-hero (contenido hijo)."*/
    position: relative;
    margin-bottom: 2rem;
    /*---------------------------------------------------------------*/
}
.contenido-hero{
    position: absolute;
/** background-color: rgba(0, 0, 0, .6); Anterior **/
    background-color: rgb(0 0 0 / 60%);/*Nuevo formato*/
    width: 100%;
    height: 100%;
/*Este bloque de codigo se puede utilizar para alinear tanto vertical como horizontalmente.*/
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
/*-------------------------------------------------------------------*/
}
.contenido-hero h2,
.contenido-hero p{
    color: var(--cblanco);
}
.contenido-hero .ubicacion{
    display: flex;
    align-items: flex-end;
}

/*SERVICIOS*/
@media (min-width: 768px) {
    .servicios{
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        column-gap: 1rem;
    }    
}
.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}
.servicio h3{
    color: var(--csecundario);
    font-weight: 400 bold;
}
.servicio p{
    line-height: 2;
    text-align: center;
}
.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--cprimario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

/*CONTACTO*/
.formulario{
    background-color: var(--cgris);
    width: min(60rem, 100%);/*esta funcion utiliza el valor mas chico.*/
    margin: 0 auto;/*es recomednable usarlo cuando el padre no tiene un display flex*/
    padding: 2rem;
    border-radius: 1rem;
}
.formulario fieldset{
    border: none;
}
.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--cprimario);
}
@media (min-width: 768px) {
    .contenedor-campos{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }
    .campo:nth-child(3),
    .campo:nth-child(4){/*Cuando tenemos varios class con el mismo nombre podemos usar la funcion nth, y los enumerar√° de 1 hasta n.*/
        grid-column: 1 / 3;
    }
}
.campo{
    margin-bottom: 1rem;
}
.campo textarea{
    height: 20rem;
}
.campo label{
    color: var(--cblanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block;
}
.input-text{
    width: 100%;
    border-color: none;
    padding: 1.5rem;
    border-radius: .5rem;
}

/*FOOTER*/
.footer{
    text-align: center;
}